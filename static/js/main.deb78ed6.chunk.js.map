{"version":3,"sources":["MovieDetails.js","Movie.js","Trending.js","Playing.js","Coming.js","Nav.js","Search.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["MovieDetails","props","_useState","useState","_useState2","Object","slicedToArray","data","setData","useEffect","axios","get","concat","match","params","id","then","res","react_default","a","createElement","className","console","log","title","src","poster_path","alt","tagline","release_date","overview","vote_average","vote_count","runtime","href","imdb_id","homepage","Movie","state","hover","_this2","this","_this$props$movie","movie","onMouseOver","e","setState","onMouseLeave","Link","to","Component","Trending","results","Fragment","map","i","src_Movie","key","index","Playing","Coming","React","Nav","Search","search","Movies","onSubmit","preventDefault","value","type","placeholder","onChange","target","Main","Switch","Route","exact","path","render","_ref","esm_extends","src_Nav","src_Playing","test","src_MovieDetails","src_Coming","src_Trending","src_Search","Redirect","component","App","BrowserRouter","src_Main","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.deb78ed6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst MovieDetails = props => {\r\n  const [data, setData] = useState({});\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://api.themoviedb.org/3/movie/${\r\n          props.match.params.id\r\n        }?api_key=72ee3d3825c6b00b953e0fd471e755f2&language=en-US`\r\n      )\r\n      .then(res => {\r\n        setData(res.data);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div className=\"movie-details-container\">\r\n      {console.log(data)}\r\n      <h1 className=\"page-heading\">{data.title}</h1>\r\n      <img\r\n        src={`https://image.tmdb.org/t/p/w500/${data.poster_path}`}\r\n        alt=\"Poster\"\r\n      />\r\n      <div>\r\n        <p>\r\n          <i>{data.tagline}</i>\r\n        </p>\r\n        <label>Release Date</label>\r\n        <p>{data.release_date}</p>\r\n        <label>Summary</label>\r\n        <p>{data.overview}</p>\r\n        <p>\r\n          <b>Rating:</b> {data.vote_average}/10 ({data.vote_count} Votes)\r\n        </p>\r\n        <p>\r\n          <b>Runtime:</b> {data.runtime} Minutes\r\n        </p>\r\n        <p />\r\n      </div>\r\n      <div className=\"details-link\">\r\n        <a href={`https://www.imdb.com/title/${data.imdb_id}`}>imdb</a>\r\n        <a href={`${data.homepage}`}>Visit Movie Homepage</a>\r\n      </div>\r\n      <div className=\"details-link\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Movie extends Component {\r\n  state = { hover: false };\r\n  render() {\r\n    const {\r\n      title,\r\n      poster_path,\r\n      release_date,\r\n      id,\r\n      vote_average\r\n    } = this.props.movie;\r\n    return (\r\n      <div\r\n        className=\"movie-item\"\r\n        onMouseOver={e => {\r\n          this.setState({ hover: true });\r\n        }}\r\n        onMouseLeave={e => {\r\n          this.setState({ hover: false });\r\n        }}\r\n      >\r\n        <div className={this.state.hover ? \"movie-info\" : \"movie-info-hidden\"}>\r\n          <div className=\"movie-title \">\r\n            {title}\r\n            <div>Release: {release_date}</div>\r\n            <div>Rating: {vote_average}/10</div>\r\n            <Link to={`/movie/${id}`}>View Movie Details</Link>\r\n          </div>\r\n          <div />\r\n        </div>\r\n        <img\r\n          className=\"movie-img\"\r\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\r\n          alt=\"movie poster\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movie;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"./Movie\";\r\n\r\nclass Trending extends Component {\r\n  state = { data: [] };\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        \"https://api.themoviedb.org/3/trending/movie/week?api_key=72ee3d3825c6b00b953e0fd471e755f2\"\r\n      )\r\n      .then(res => {\r\n        this.setState({ data: res.data.results });\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1 className=\"page-heading\">Trending Movies</h1>\r\n        <div className=\"movie-carousel\">\r\n          {this.state.data.map((movie, i) => (\r\n            <Movie key={i} index={i} movie={movie} />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Trending;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"./Movie\";\r\n\r\nclass Playing extends Component {\r\n  state = { data: [] };\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        \"https://api.themoviedb.org/3/movie/now_playing?api_key=72ee3d3825c6b00b953e0fd471e755f2&language=en-US&page=1\"\r\n      )\r\n      .then(res => this.setState({ data: res.data.results }));\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1 className=\"page-heading\">Now Playing</h1>\r\n        <div className=\"movie-carousel\">\r\n          {this.state.data.map((movie, i) => (\r\n            <Movie key={i} index={i} movie={movie} />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Playing;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"./Movie\";\r\n\r\nclass Coming extends React.Component {\r\n  state = { data: [] };\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        \"https://api.themoviedb.org/3/movie/upcoming?api_key=72ee3d3825c6b00b953e0fd471e755f2&language=en-US&page=1&region=US\"\r\n      )\r\n      .then(res => {\r\n        this.setState({ data: res.data.results });\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1 className=\"page-heading\">Coming Soon</h1>\r\n        <div className=\"movie-carousel\">\r\n          {this.state.data.map((movie, i) => (\r\n            <Movie key={i} index={i} movie={movie} />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Coming;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <div>\r\n      <div id=\"navigation\">\r\n        <div className=\"nav-segment\">\r\n          <h3 id=\"title\">Flix!</h3>\r\n        </div>\r\n        <div className=\"nav-segment\">\r\n          <Link className=\"nav-item\" to=\"/nowplaying\">\r\n            Now Playing\r\n          </Link>\r\n          <Link className=\"nav-item\" to=\"/comingsoon\">\r\n            Coming Soon\r\n          </Link>\r\n          <Link className=\"nav-item\" to=\"/trending\">\r\n            Trending\r\n          </Link>\r\n          <Link className=\"nav-item\" to=\"/search\">\r\n            Search\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"./Movie\";\r\n\r\nclass Search extends React.Component {\r\n  state = { search: \"\", data: { data: { results: [] } } };\r\n  render() {\r\n    const Movies = this.state.data.data.results.map(movie => {\r\n      return <Movie movie={movie} />;\r\n    });\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            axios\r\n              .get(\r\n                `https://api.themoviedb.org/3/search/movie?api_key=72ee3d3825c6b00b953e0fd471e755f2&language=en-US&query=${\r\n                  this.state.search\r\n                }&page=1&include_adult=true&region=US`\r\n              )\r\n              .then(res => {\r\n                console.log(res);\r\n                this.setState({ data: res });\r\n              });\r\n          }}\r\n        >\r\n          <input\r\n            value={this.state.search}\r\n            type=\"text\"\r\n            placeholder=\"Search Movie Title\"\r\n            onChange={e => {\r\n              this.setState({ search: e.target.value });\r\n            }}\r\n          />\r\n          <button type=\"submit\">Search</button>\r\n        </form>\r\n        {Movies}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport MovieDetails from \"./MovieDetails\";\r\nimport Trending from \"./Trending\";\r\nimport Playing from \"./Playing\";\r\nimport Coming from \"./Coming\";\r\nimport Nav from \"./Nav\";\r\nimport Search from \"./Search\";\r\n\r\nconst Main = props => {\r\n  return (\r\n    <Switch>\r\n      <Route\r\n        exact\r\n        path=\"/\"\r\n        render={({ ...props }) => {\r\n          return (\r\n            <div>\r\n              <Nav />\r\n              <Playing test=\"test\" />\r\n            </div>\r\n          );\r\n        }}\r\n      />\r\n      <Route\r\n        path=\"/movie/:id\"\r\n        render={props => {\r\n          return (\r\n            <div>\r\n              <Nav />\r\n              <MovieDetails {...props} />\r\n            </div>\r\n          );\r\n        }}\r\n      />\r\n      <Route\r\n        path=\"/nowplaying\"\r\n        render={props => {\r\n          return (\r\n            <div>\r\n              <Nav />\r\n              <Playing />\r\n            </div>\r\n          );\r\n        }}\r\n      />\r\n      <Route\r\n        path=\"/comingsoon\"\r\n        render={props => {\r\n          return (\r\n            <div>\r\n              <Nav />\r\n              <Coming />\r\n            </div>\r\n          );\r\n        }}\r\n      />\r\n      <Route\r\n        path=\"/trending\"\r\n        render={props => {\r\n          return (\r\n            <div>\r\n              <Nav />\r\n              <Trending />\r\n            </div>\r\n          );\r\n        }}\r\n      />\r\n      <Route\r\n        path=\"/search\"\r\n        render={props => {\r\n          return (\r\n            <div>\r\n              <Nav />\r\n              <Search />\r\n            </div>\r\n          );\r\n        }}\r\n      />\r\n      <Redirect to=\"/search\" component={Trending} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Main from \"./Main\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div id=\"page\">\n          <Main />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}